[====================================================== C3X RELEASE 25 PREVIEW 1 DEFAULT CONFIG =====================================================]
[======================================================================= NOTE =======================================================================]
[Instead of editing this file, changes to the settings should be placed in either the scenario or custom config files. The scenario config file must ]
[be named scenario.c3x_config.ini and must be located in your scenario search folder. Of course it only applies if you are using a scenario. The     ]
[custom config file must be named custom.c3x_config.ini and located in the C3X folder, which is the folder where this file is. When creating scenario]
[or custom configs, it is only necessary to include the settings you wish to change.                                                                 ]
[====================================================================================================================================================]

[============================]
[=== CONVENIENCE FEATURES ===]
[============================]

enable_stack_bombard = true
enable_stack_unit_commands = true
enable_disorder_warning = true
show_detailed_city_production_info = true
enable_trade_screen_scroll = true
autofill_best_gold_amount_when_trading = true
skip_repeated_tile_improv_replacement_asks = true
group_units_on_right_click_menu = true

; On the right click menu, units with no remaining moves will appear in gray text
gray_out_units_on_menu_with_no_remaining_moves = true

; Places an icon next to units on the right-click menu showing their remaining moves & status. The icon is green for unmoved units, red for units that
; have exhausted all their moves, and yellow for those in between. Additionally it contains a little sword for units that can still attack and is
; colored blue for fighters set to intercept.
put_movement_icons_on_units_on_menu = true

; Replaces the "Wake" or "Activate" text on the right-click menu with more descriptive words indicating what the unit is currently doing. For example,
; "Moving", "Intercepting", or "Working".
describe_states_of_units_on_menu = true

show_detailed_tile_info = true
show_golden_age_turns_remaining = true

; This option causes the game to show attack animations for units exerting zone of control from the middle of their tile's stack. Otherwise the game
; will only show such animations for units that are the top visible unit on their tiles. It was presumably an oversight by the original developers
; that units exerting zone of control do not temporarily become the visible unit on their tiles (unlike, for example, defensive bombard).
show_zoc_attacks_from_mid_stack = true

cut_research_spending_to_avoid_bankruptcy = true
dont_pause_for_love_the_king_messages = true

; Holding shift when clicking a specialist on the city screen will switch to the previous, instead of the next, specialist type
reverse_specialist_order_with_shift = true

; Pressing the Z key on the city screen will zoom the map in/out
toggle_zoom_with_z_on_city_screen = true

; When king units are spawned they're named after the leader of their civ. This is undesirable in modded games where the king flag is often used
; on units that aren't intended to be actual kings. This setting helps by bypassing the king unit naming logic when regicide is not enabled.
dont_give_king_names_in_non_regicide_games = true

; One of the game's "Easter eggs" is that all king-flagged units appear as Elvis Presley on his birthday (Jan 8). This can be annoying when playing
; mods that make wide use of the king flag.
no_elvis_easter_egg = false

; Removes option to automate workers from the human player. Useful for those who never want to use automation but sometimes accidentally activate it.
disable_worker_automation = false

; There is a limit to how many links can appear on each Civilopedia page. Some mods exceed that limit. The problem is that the game throws up a popup
; when the limit is exceeded, one popup for each link beyond the limit. That can result in dozens of annoying, useless popups. This option stops them
; from appearing. Note: the game may also crash if the number of links far exceeds the limit. This option does not stop the crash, just the popups.
suppress_hypertext_links_exceeded_popup = true

; Replaces the text "Upgrades To" with "Obsoleted By" in the Civilopedia for unit types that go obsolete but cannot be upgraded to their successors.
indicate_non_upgradability_in_pedia = true

; Shows a message when a bomber gets intercepted by enemy air defense buildings but succeedes on its roll to avoid damage. Without this message, there
; is no indication that anything happened in that case except for the bomber losing one movement point.
show_message_after_dodging_sam = true

; Normally only the last human player in a hotseat game gets to see the AIs move their units since the game processes the interturn while that player
; is still seated. This setting shows the AI moves to the other players in the game. It works by creating a save just before the interturn processing
; happens and then, at the start of the other players' turns, loads the save, sets that player as the seated one, reprocesses the interturn, then
; resumes the original game.
; Note: If the game is manually saved and reloaded, the replay will be lost. So it is recommended to save the game only after all human players have
; seen the replay, i.e. during the last or second to last human players' turns.
replay_ai_moves_in_hotseat_games = false

; Normally, when you load a save, all units face southeast because the game didn't record which direction they were facing when the save was
; created. However, the game does record which tile they were on before their most recent move, so it is possible to deduce which direction they
; should be facing. That's what this option does.
restore_unit_directions_on_game_load = true

; The game stores your map grid setting (on or off) in conquests.ini. It applies that setting after creating a new game, but not after loading a
; save. That was presumably an oversight and is corrected by this config option.
apply_grid_ini_setting_on_game_load = true

; Causes cities to display harbor/airport icons if they have buildings that grant the relevant unit effects (produce veterans & heal in one turn)
; instead of buildings that grant sea/air trade. This makes no difference under the standard rules but is useful with mods that separate the unit
; effects and trade abilities into different buildings.
city_icons_show_unit_effects_not_trade = true

; The game rules do not permit aircraft in an airfield to be damaged by bombardment. The interface allows players to order such bombardments anyway
; since its logic to check target validity is incomplete. This option completes the logic, causing the interface to reject attempts to bombard an
; airfield which would have no effect.
disallow_useless_bombard_vs_airfields = true

; This option fixes a graphical bug that appears when the game is run on Linux using Wine. The bug is caused by the game using both Windows GDI and
; OpenGL to draw to the same canvas. Because the game only uses OpenGL to draw lines, it's relatively easy to solve this issue by reimplementing line
; drawing using Windows GDI+ instead. There are three possible settings for this option:
;   never: Self-explanatory
;   wine: This change will only be applied if the mod detects the game is running on Wine
;   always: This change will always be applied, even on an actual Windows system
draw_lines_using_gdi_plus = wine

; This option reduces the vertical distance between rows in the list of luxuries on the city screen. This allows up to 11 luxuries to be displayed
; neatly inside the box.
compact_luxury_display_on_city_screen = false

; Similar to the option above, this one packs the strategic resources more tightly into the box on the upper left of the city screen. This allows up
; to 13 resources to be displayed there.
compact_strategic_resource_display_on_city_screen = false

; Causes the domestic advisor to ask for confirmation before setting city production to a building that would replace another already built in the
; city. It's similar to how the domestic advisor warns you before a production switch would waste shields. Useful for modded games where you might not
; know which buildings replace which.
warn_when_chosen_building_would_replace_another = false

; This option keeps citizens working the tiles they've been assigned to when pollution spawns there instead of converting them to specialists. This
; reduces micromanage but comes at the cost of the specialist yields.
do_not_unassign_workers_from_polluted_tiles = false

; Normally the game draws capital cities one level larger than normal. I.e., a capital city at size 1 - 6 uses the graphic for cities at size 7 - 12,
; and a capital at size 7+ uses the graphic for cities 13+. This option turns that off, so capitals use the standard city graphics.
do_not_make_capital_cities_appear_larger = false

; Tints coast and sea tiles on the minimap based on the culture that controls them, like is normally done for land tiles.
show_territory_colors_on_water_tiles_in_minimap = false

; In offline games, shows some popup messages as online-multiplayer-style notes to the left of the screen instead of advisor popups that pause
; gameplay until dismissed. The point is to minimize interruptions during turn processing. Affects popups with the following text keys:
; SUMMARY_END_GOLDEN_AGE, SUMMARY_END_SCIENCE_AGE, SUMMARY_NEW_SMALL_WONDER, WONDERPRODUCE, MAKEPEACE, MUTUALPROTECTIONPACT, MILITARYALLIANCE,
; SUMMARY_DECLARE_WAR, TRADEEMBARGOENDS, SUMMARY_CIV_DESTROYED_BY_CIV, SUMMARY_CIV_DESTROYED, LOSTGOOD, TRADEEMBARGO, MILITARYALLIANCEWARONUS,
; MILITARYALLIANCEAGAINSTUS, and SUMMARY_TRAVELERS_REPORT.
convert_some_popups_into_online_mp_messages = false

; If enabled, pressing the keys d e b u g to type "debug", in-game will allow you to activate debug mode for a game in progress. Typing that with
; debug mode already on will deactivate it.
enable_debug_mode_switch = true

; Places a small shadow below city dots on the minimap to make them more easily visible especially against light-colored territory. This feature does
; not quite work properly so is left off by default. Its issues are (1) the shadows may not fully appear until you toggle the minimap from territory
; to geography mode and back again and (2) the shadows may appear in geography mode.
accentuate_cities_on_minimap = false

; Makes the minimap twice as large. Possible values are "never", "always", and "high-def". The first two are self-explanatory; if set to "high-def",
; the minimap's size will be doubled when the game is run at a horizontal resolution of at least 1920 pixels.
double_minimap_size = high-def

; Allows descriptions for units, civilizations, and game concepts to span multiple pages. If a DESC entry of one of those types is too long for one
; page, it will automatically be divided into multiple with buttons added for navigation.
allow_multipage_civilopedia_descriptions = true

[====================]
[=== OPTIMIZATION ===]
[====================]

; Rewrites the game's trade network computation logic to improve speed. On large maps with many cities, this computation takes up most of the
; interturn time so speeding it up greatly improves turn times. For more info, see the text file in the Trade Net X folder.
enable_trade_net_x = true

; Rewrites parts of the game logic to improve efficiency. Those parts check every possible improvement defined in the scenario when they really only
; need to check a few. For example, to determine whether a city can trade via air, it's very wasteful to check every improvement since the vast
; majority of them do not enable air trade. This option can improve turn times very significantly in some circumstances.
optimize_improvement_loops = true

; Displays a popup after each turn has been processed showing the time elapsed, including specifically how much time was spent recomputing trade
; networks. NOTE: Turning this on will skip all animations during the interturn so they don't contribute to the time. You aren't meant to play the
; game with this option left on.
measure_turn_times = false

[=======================]
[=== AI ENHANCEMENTS ===]
[=======================]

; Allows artillery unit AI to grab escorts from city defenders, causing the AI to use its artillery offensively instead of leaving it in its cities.
use_offensive_artillery_ai = true

; If true, the AI will not escort its units unless they have the "requires escort" flag set in the editor. This allows modders to remove the escort
; requirement from certain types of units, for example artillery with non-zero defense.
dont_escort_unflagged_units = false

; Set to a number to encourage the AI to build more artillery, set to false or <= 0 for no change in AI unit build choices. The number is how many
; artillery units the AI will try to keep around for every 100 non-artillery combat land units it has. The encouragement only applies if the AI is
; already above a minimum of one defensive unit per city and one offensive unit per two cities. Default: 16.
ai_build_artillery_ratio = 16

; The above option controls how many artillery the AI will keep around, this one controls how aggressively it builds up to that limit. More
; specifically it controls how valuable (in percent) the AI thinks artillery is as a damage dealer compared to attacking units. Default: 50.
ai_artillery_value_damage_percent = 50

; Like the artillery ratio, shifts the AI's build priority from fighters to bombers to keep around this many bombers per 100 fighters. Default: 70.
ai_build_bomber_ratio = 70

; Completely replaces the leader unit AI with custom code. The custom version is similar in spirit to the original but fixes several major issues:
; 1. It fixes a bug that allowed the AI to rush any kind of city production, including units and (with an MGL) wonders
; 2. Prioritizes army formation over rushing production when appropriate
; 3. When rushing, prioritizes wonders and costly improvements in high value cities
replace_leader_unit_ai = true

; Replaces the AI code that determines whether a unit would be a good addition to an army. The replacement code fixes a major bug that prevented the
; AI from filling its armies, prevents the AI from including hidden nationality units in armies to avoid crashes, and removes some logic that
; encouraged the AI to mix unit types in armies.
fix_ai_army_composition = true

; "Pop units" are special units whose only purpose is to be joined into cities to increase their population. Normally the AI does not know what to do
; with these units, so this option enables a routine that causes them to search for & join an appropriate city. Pop units only appear in some mods
; (for example Tides of Crimson). Under the standard game rules, this option has no effect. In order to function as a pop unit, a unit must use the
; terraform AI strategy, have no worker actions except join city, have a pop cost of at least 1, and have zero attack, defense, & bombard strengths.
enable_pop_unit_ai = true

; "Caravan units" are special units whose only purpose is to be disbanded to contribute shields to a city. The name comes from the Civ 2 caravan.
; Caravan units may appear in some mods; under the standard game rules, this option has no effect. In order to function as a caravan unit, a unit must
; use the terraform AI strategy, have no worker actions enabled, have the ability to disband, and have zero attack, defense, & bombard strengths.
enable_caravan_unit_ai = true

; In the base game, the AI will assign 1, 2, or 3 escort units to its naval transports and carriers depending in their shield cost and the number of
; units they're carrying. This option lets you reduce the upper limit on the number of escorts assigned. You can limit the number of escorts to 2, 1,
; or even 0. Setting this option >= 3 will result in base game behavior. The purpose of reducing the limit is to free up the AI's naval power units.
max_ai_naval_escorts = 3

; This controls how many workers the AI feels it needs as a percentage of the base amount. For example, if set to 150 (the default), the AI will build
; about 50% more workers than normal. Set to 100 for base game behavior. For more info, see:
;   https://forums.civfanatics.com/threads/c3x-exe-mod-including-bug-fixes-stack-bombard-and-much-more.666881/page-95#post-16587093
ai_worker_requirement_percent = 150

[=================]
[=== BUG FIXES ===]
[=================]

; Descriptions of bugs and their fixes:
;   SUBMARINE BUG -- The AI runs into invisible units (such as submarines) belonging to other players because it blindly follows paths produced for
; it by the game's pathfinder, which does not see invisible units. After colliding with an invisible unit, the AI initiates combat, declaring war if
; necessary. The mod fixes this bug by modifying the pathfinder so it sees invisible units belonging to other non-hostile players so it can route
; around them.
;   SCIENCE AGE BUG -- The bonus science points generated by a scientific golden age are not actually counted towards research progress. They appear
; only on the interface. This is because of a small oversight in the code. There is a setting which controls whether or not science age bonus points
; are included while gathering all research points. It's turned off while gathering points to update research progress. The fix is to turn it on.
;   PEDIA TEXTURE BUG -- There is a one pixel wide pink line on the right edge of the Civilopedia screen. This is because the width of the
; Civilopedia background texture is set one pixel too small inside the EXE. This is fixed simply by replacing the width with the correct value.
;   BLOCKED DISEMBARK FREEZE -- When using "disembark all" (which the AI always does) on a boat containing units that can't be disembarked, the game
; may freeze as it endlessly tries to disembark them. The root of the problem is that the game's logic to check if there are any disembarkable units
; left on the boat is incomplete. There are two cases that it misses. First, it does not consider the "immobile" unit flag. This is fixed by making
; immobile units appear to have no remaining movement points for this bit of logic so they are correctly considered non-disembarkable. Second, it does
; not consider escort relationships (e.g. for settlers). If a unit has a non-disembarkable escorter then it also can't be disembarked because the game
; will always try to move its escorter ahead of it. The solution here is to clear all escort relationships for ship passengers before disembarking.
;   HOUSEBOAT BUG -- The game may crash when an AI player is left alive with only a settler on a boat. This happens because the AI's logic tries to
; check the location of its capital city without considering that there may be no capital. The fix is to modify this logic so that when it looks up
; the location of a non-existent capital, it receives a valid "dummy" location that it can process without crashing. See also:
;   https://forums.civfanatics.com/threads/c3x-exe-mod-including-bug-fixes-stack-bombard-and-much-more.666881/page-10#post-16084386
;   https://forums.civfanatics.com/threads/c3x-exe-mod-including-bug-fixes-stack-bombard-and-much-more.666881/page-10#post-16085242
;   INTERCEPT LOST TURN BUG -- When a human player sets a fighter to intercept mode, the game discards all of its remaining movement points, hence it
; cannot intercept during the next interturn. This bug does not affect the AI and is part of the interface logic, not the game logic. I presume it was
; inserted by a programmer who did not understand how the game's unit cycling works. The fix simply restores fighters' discarded moves.
;   PHANTOM RESOURCE BUG -- The game only stores one full list of available resources per player. That list contains how many sources of each
; resource type are avaiable in that player's capital and all connected cities. Cities off the capital's network have reduced lists of just 32 bits,
; recording yes-or-no availability for up to 32 resources. Resources beyond the first 32 will share bits in those reduced lists. Specifically, the
; 33rd resource shares the same bit as the 1st, the 34th the same as the 2nd, and so forth. This causes "phantom" resources. For example, if a mod has
; horses set as the 1st resource and steel as the 33rd, then any city off its capital's trade network with access to horses will also have access to
; steel and vice-versa. The fix for this issue is straight forward but not simple. The jist is the mod allocates additional space for the reduced
; lists so they're not limited to 32 bits, rather have enough bits for every resource in the game. After that it's necessary to modify the code that
; accesses the reduced lists so it can make use of the additional space.
;   MAINTENANCE PERSISTING FOR OBSOLETE BUILDINGS -- Players are not supposed to pay maintenance for obsolete city improvements however they often do
; because the game does not recompute maintenance after a player unlocks a technology that obsoletes a city improvement. There is a related exploit in
; that, after triggering a recomputation of maintenance, players can then sell their obsolete buildings to have the maintenance deducted again,
; effectively getting credited for the cost of maintenance. The mod fixes both issues. It recomputes maintenance costs when a player unlocks a
; technology that obsoletes a city improvement and it stops the game from deducting the maintenance cost of an obsolete city imp. when it's sold.
;   BARBARIAN DIAGONAL BUG -- Barbarians can only search for targets on adjacent tiles or on tiles that are up to 12 steps directly SE or NW of their
; position. The intended behavior was for them to search for targets on all surrounding tiles up to 6 steps away. This bug was caused by a small,
; sloppy programming mistake that can be corrected with a small edit. For details, see:
;   https://forums.civfanatics.com/threads/c3x-exe-mod-including-bug-fixes-stack-bombard-and-much-more.666881/page-70#post-16434678
;   DISEASE CURING TECH FLAG BUG -- In the base game, the tech flag "Disables Diseases From Flood Plains" (applied to Sanitation) does nothing and
; instead flood plains disease stops once players discover Writing. This happens because that flag is encoded as number 8 and, instead of checking if
; players have a tech with that flag, the code mistakenly checks if players have tech #8, which is Writing under the standard rules. Correcting this
; bug causes a lot more disease, which is a major annoyance, and so this bug fix is turned off by default.
;   DIVISION BY ZERO IN AI ALLIANCE EVAL -- When considering whether to agree to a military alliance, the AI computes the distance from its capital to
; the nearest city belonging to the target of the alliance and divides by that distance. For unknown reasons, in rare cases that distance may be zero,
; which crashes the program due to division by zero. The mod fixes this issue by inserting a bit of logic after the distance is computed to check if
; it's zero and, if so, set it to one.
;   EMPTY ARMY MOVEMENT -- Empty armies have one less than a full move's worth of movement points regardless of how many moves their unit type has set
; in the editor. Under the standard game rules, this means they can only move two tiles along roads. The cause is a small mistake in the logic that
; attempts to find the slowest member among units in the army. The mod fixes this bug by reimplementing the max movement point calculation for armies.
;   PREMATURE TRUNCATION OF FOUND PATHS -- If the game attempts to find a path for a unit that's more than 256 tiles long, the path will not be
; returned properly from the pathfinder. That's because the pathfinder stops reconstructing the final path once it reaches a length of 256. That
; creates a serious problem for long paths because reconstruction works from the end of the path toward the start, so stopping early produces an
; incorrect path that begins in the middle. The fix is simply to multiply the maximum length by 10 (to 2560). Removing the limit entirely risks
; allowing infinite loops. This bug is rarely visible in-game, it usually appears as AI naval units following inappropriate or invalid paths.
;   ZERO PRODUCTION CRASH -- If a city has zero production, which is possible using specialists modded to produce negative shields, the game will
; crash due to a division by zero.
;   AI CAN SACRIFICE WITHOUT SPECIAL ABILITY -- The base game function that gates the AI's ability to sacrifice units does not check whether the unit
; in question has the sacrifice special ability set on its type. Thus, AIs are allowed to sacrifice any captured units as long as they have the
; required tech. The mod fixes this by patching the gating function to insert the missing condition.
;   AI CAN FORM ARMY WITHOUT SPECIAL ABILITY -- Similar to the above issue, the AI's ability to form armies with leader units is not gated by those
; units having the "build army" special ability.
;   CRASH IN LEADER UNIT AI -- The base game's AI routine for leader units may crash due to uninitialized variables.

patch_submarine_bug = true
patch_science_age_bug = true
patch_pedia_texture_bug = true
patch_blocked_disembark_freeze = true
patch_houseboat_bug = true
patch_intercept_lost_turn_bug = true
patch_phantom_resource_bug = true
patch_maintenance_persisting_for_obsolete_buildings = true
patch_barbarian_diagonal_bug = true
patch_disease_stopping_tech_flag_bug = false
patch_division_by_zero_in_ai_alliance_eval = true
patch_empty_army_movement = true
patch_premature_truncation_of_found_paths = true
patch_zero_production_crash = true
patch_ai_can_sacrifice_without_special_ability = true
patch_ai_can_form_army_without_special_ability = true
patch_crash_in_leader_unit_ai = true

; At the beginning of each AI player's turn, deletes any units of theirs that are not on a valid tile. This addresses a rare crash that can occur when
; the unit AI invokes the pathfinder for an off-map unit. I don't know how AI units can end up off the map in the first place.
delete_off_map_ai_units = true

; On the city screen, the icons for different kinds of specialist yields get drawn over top of, instead of beside, one another. This setting fixes
; that so they are displayed properly.
fix_overlapping_specialist_yield_icons = true

[======================]
[=== LIMITS REMOVED ===]
[======================]

remove_unit_limit = true
remove_city_improvement_limit = true

; The city limit can be configured up to a maximum of 2048 or down to a minimum of 0. For base game behavior, set to 512.
city_limit = 2048

; Increases the cap on the game turn limit from 1000 to 1000000
remove_cap_on_turn_limit = true

; Be warned: the no era limit feature is incomplete, untested, and not likely to work at this time
remove_era_limit = false

[=========================]
[=== ENGINE EXTENSIONS ===]
[=========================]

; These "NoRaze" options can stop cities from being destroyed. "Autorazing" refers to the automatic destruction of size one, cultureless cities. If
; autorazing is prevented, players will be given the option to keep the city. If razing by players is prevented, neither the human player nor AIs will
; be allowed to raze or abandon cities.
prevent_autorazing = false
prevent_razing_by_players = false

; These options allow you to adjust the minimum allowed distance between cities. minimum_city_separation controls the minimum number of tiles between
; cities so, e.g, if it's set to 1, cities cannot be founded adjacent to one another, there must be at least one open tile separating them. A setting
; of 1 there corresponds to the standard game rules. disallow_founding_next_to_foreign_city is an optional additional restriction. If it's enabled,
; cities may not be founded adjacent to a city belonging to another civ regardless of the minimum separation. It is only relevant when the minimum
; separation is set to zero.
minimum_city_separation = 1
disallow_founding_next_to_foreign_city = true

; Set to a number to limit railroad movement to that many tiles per turn. To return to infinite railroad movement, set to false or a number <=0. By
; default, all units travel the same distance along limited rails like in Civ 4, but this can be changed by toggling the next option below.
; NOTE: For best results, the railroad limit should be a multiple of the "movement rate along roads" set in the editor (usually 3). The limitation
; will work in any case, but setting the limit this way helps avoid an integer overflow issue inside the pathfinder that may cause it to fail to find
; the shortest paths for units with a large number of available moves.
limit_railroad_movement = false

; If set to true, limited railroads will work like fast roads instead of Civ 4 style railroads. The movement rate along fast roads is determined by
; the limit_railroad_movement setting above. If that setting is false or <= 0, this option does nothing.
limited_railroads_work_like_fast_roads = false

; This option lets you put a limit on how many units may occupy each tile. The limit applies separately for land, sea, and air units. You may set the
; limit differently for each of those classes by setting this option to a list of three numbers. If you set it to a single number, that limit amount
; will apply to all three. If you set it to false or a number <= 0, no limit will apply, as in the base game. Some examples:
;   To limit tiles to 5 land, 5 sea, and 5 air units: limit_units_per_tile = 5
;   To limit tiles to 5 land and sea units but 10 air units: limit_units_per_tile = [5 5 10]
;   To limit only air units to 10 per tile: limit_units_per_tile = [false false 10]
;   To have no limit (as in the standard game rules): limit_units_per_tile = false
; NOTE: You can exclude tiles with cities from the limit by toggling the option below.
limit_units_per_tile = false

; Allows an unlimited number of units to occupy tiles with cities when the unit limit is in force. When the limit (option above) is deactivated, this
; option does nothing.
exclude_cities_from_units_per_tile_limit = false

enable_free_buildings_from_small_wonders = true
allow_stealth_attack_against_single_unit = false
disallow_trespassing = false
enable_land_sea_intersections = false

; All anarchy lengths will be multiplied by this amount as a percent. For example, if set to 50, anarchy length will be reduced by half. Set to 100
; for standard game behavior. There is a minimum anarchy length of 2 turns, but you can remove anarchy entirely by setting this option < 0.
anarchy_length_percent = 100

; Add perfume to an improvement or unit type to encourage the AI to build it more often. When choosing what to buld, the AI computes a point value for
; each of its options and the mod will add the perfume amount to the point total for each named option. For reference, point values are often in the
; hundreds for the most desirable options. You can see the point value the AI gives to every available build by pressing P while viewing one of its
; cities. Perfume amounts can also be specified as a percentage, ex. a perfume amount of 15% will increase the AI's evaluation by 15% and an amount of
; -50% will reduce it by half.
; production_perfume is a list of names and amounts, each one looks like "name": amount
; Here's an example: ["Granary": 15, "Colosseum": -20%, "Courthouse": 30]
; The quotation marks around a name are not necessary if the name is all one word (i.e. does not include spaces) and is made up of only letters,
; digits (0-9), periods, hyphens, or underscores. The category of letters includes the normal English a-z and A-Z as well as accented variants
; (e.g. ä, ö, ñ, ç) and all other non-English letters available in the Windows-1252 encoding (e.g. ß, þ, æ).
production_perfume = []

; Add perfume to a technology to change how valuable the AI judges the tech to be. Each point of perfume is worth roughly one gold in trade, and also
; affects what the AI chooses to research. The format matches production_perfume above, ex.: [Medicine: 500, Fascism: -50%, "Replacable Parts": 20%].
technology_perfume = []

; Add perfume to a government to encourage or discourage the AI from switching to that type. The format follows the other perfume options, ex.:
; [Republic: 10%, Fascism: -30%]. Unfortunately I don't know how much each point is worth in this context. I also don't know how perfuming governments
; affects the AI's willingness to overthrow its current govt. The perfume for sure applies when the AI is selecting a new govt type after anarchy.
government_perfume = []

; The AI production ranking is the point value the AI gives to each available build in some city. To view it, press P while viewing an AI city.
enable_ai_production_ranking = true

; Shades/highlights each tile to show how desirable the AI considers it as a city location. To activate, press L while in game. The scale goes from
; white (least desirable) to red (most desirable) with yellow in between. Also the exact number the AI gives any tile can be seen on its info box.
enable_ai_city_location_desirability_display = true

; Setting a government's corruption level to "OFF" will remove all corruption, as expected, instead of maximizing it
zero_corruption_when_off = true

; Prevents land settlers/workers on transports from settling/improving water tiles. This option does not affect the vanilla game but is useful for
; mods that enable city building or improvement of water tiles.
disallow_land_units_from_affecting_water_tiles = true

; Allows units to move after airdropping by making airdrops cost no movement. Under the standard game rules, units lose all their remaining moves
; after airdropping. Units will be prevented from airdropping more than once in the same turn.
dont_end_units_turn_after_airdrop = false

allow_airdrop_without_airport = false
enable_negative_pop_pollution = true

; Here it's possible to set buildings as prerequisites for unit production. It's possible for a unit type to have multiple prereq buildings up to a
; maximum of 10, and all must be present in a city for the unit to be buildable.
; The format is a list of building names and unit type names, each one looks like "building name": "unit type 1" "unit type 2" ...
; Quotation marks around names can be omitted like in production_perfume (see above).
; Here's an example:
; [Factory: Tank "Modern Armor",
;  Barracks: Swordsman Cavalry Tank "Modern Armor",
;  Airport: Bomber]
building_prereqs_for_units = []

; Here it's possible to set buildings to generate resources. Those resources can be added to the trade network or limited to the building's city.  The
; format is a list of building name and resource name pairs with optional "local", "no-tech-req", "yields", "show-bonus", and/or "hide-non-bonus"
; settings before each resource name. Example:
; ["Steel Mill": Steel, Terrace: yields show-bonus Rice, "Coal Liquefaction": local Oil, Supercollider: local no-tech-req Antimatter,
;  "Hydro Plant": local "Electric Power"]
; Quotation marks around names can be omitted like in production_perfume (see above).
; The "local" setting means that the produced resource will not be added to the trade network, it will be available only in the building's city.
; The "no-tech-req" setting means that the resource will be produced even for players who do not have the technology to reveal it on the map.
; The "yields" setting means that the resource's tile yields will be added to the city as if it were on a worked tile.
; The "show-bonus" setting means that an icon for the generated resource will be displayed on the city screen even if it's a bonus resource.
; The "hide-non-bonus" setting is the opposite of show-bonus. It means an icon will NOT be shown if the resource is of strategic or luxury type.
; Buildings will not generate resources if the resource requirement for the building itself is not met. This makes it possible to set up resource
; production chains. Note for modders: Production chains require the input resources to be listed before the outputs in the scenario data, when the
; inputs also come from buildings. For example if you have iron ore on the map, a building that requires it and produces iron, and a building that
; requires iron and produces steel, iron must be listed before steel in the scenario data or the chain won't work. This is because building resource
; generation is calculated in the same order as the generated resources appear in the scenario data. This limitation does not apply to map resources
; (iron ore in the example) as access to all map resources is calculated first before any building resources.
buildings_generating_resources = []

; Shows a warning in case some of the unit, building, or resource names in this config file don't match anything in the scenario data.
warn_about_unrecognized_names = true

; Overrides the rules for when units are eligible to retreat based on their movement. The possible options are:
;   standard: No change from base game rules
;   none: No units will ever retreat
;   all-units: All non-immobile units may retreat, even if they have only one move or are up against a faster opponent
;   if-faster: Units may retreat when they are faster than their opponent, for example a cavalry may retreat from a knight
; These settings don't change the fact that units cannot retreat when they start combat with 1 HP or are defending a city. They also do not change
; that naval units cannot retreat defensively (there is a separate option for that below).
land_retreat_rules = standard
sea_retreat_rules = standard

; Under the base game rules, no unit may retreat defensively if it's located on a water tile. This option removes this special rule so naval units can
; retreat defensively just like land units do. See also: the sea_retreat_rules option above.
allow_defensive_retreat_on_water = false

; The multi-city start spawns in multiple cities for AI players at the start of the game instead of their usual one settler. This option controls the
; number of cities the AI starts with. E.g., if it's set to 2, the AI starts with 2 cities. If it's set <= 0, the game starts like normal. The mod can
; also add improvements to the AI's extra cities, which are intended to work like extra palaces, see ai_multi_start_extra_palaces.
ai_multi_city_start = 0

; This option only applies if ai_multi_city_start is set > 1. It controls how many tiles the mod will randomly check while searching for a suitable
; location for each of the AI's extra starter cities. Default: 10000.
max_tries_to_place_fp_city = 10000

; This option only applies if ai_multi_city_start is set > 1. It specifies a list of improvements to be added to the AI's additional cities. E.g:
;   ["Forbidden Palace" Courthouse]
; If the AI multi-city start is set to 3+ with the above extra palaces, the AI players will start with 3+ cities and the first one will have the
; Palace like normal, the second will have the Forbidden Palace, and the third will have a courthouse, any after that will start empty.
; Additionally, any small wonders listed here with the "reduces corruption" effect will be considered "extra palaces" for the AI. They will respawn
; like the real Palace. In other words, if an AI loses a city with an extra palace, it will reappear in another one of its cities following the same
; logic the game uses to select a new Palace location. If the AI is missing an extra palace and acquires a new city, that extra palace will
; automatically be added to the new city.
ai_multi_start_extra_palaces = []

; Turning this on makes small or great wonders with the "reduces corruption" effect, such as the Forbidden Palace, as effective at reducing corruption
; as the palace itself. This reduces corruption not only in the city that contains such a wonder, it also reduces distance and rank corruption in
; nearby cities as if the city were an additional capital.
promote_wonder_decorruption_effect = false

allow_military_leaders_to_hurry_wonders = false

; The AI's beaker production will be multiplied by this amount, as a percent. A value of 100 gives you the standard game behavior, a value of 75
; reduces AI research by 25%, a value of 200 doubles AI research, and so on.
ai_research_multiplier = 100

; Each time an AI player founds a city, the given amount of perfume will be applied to its settlers over the given duration in number of turns. The
; perfume effect declines steadily to zero over the duration. The perfume amount may be specified as a percentage. The purpose of these options is to
; slow the AI's expansion with negative perfume.
; NOTE: The AI has a very strong tendancy to build settlers so you'll need to set these options relatively high to slow it down significantly. For
; example, a perfume of -200% over a 30 turn duration left the AI with about half as many cities after 50 turns in my test.
ai_settler_perfume_on_founding = 0
ai_settler_perfume_on_founding_duration = 0

; If a player can't afford to pay maintenance on their buildings and units, the game will forcibly lower expenses and raise money by (in order):
;   1. Selling buildings, excluding those that are maintenance-free or contribute to gold production even indirectly
;   2. Disbanding units, excluding free ones
;   3. Switching cities to building Wealth
aggressively_penalize_bankruptcy = false

; Under the standard game rules, the Despotism tile penalty does not apply to food yield from city tiles of Agricultural civs with fresh water. Set
; this option to true to remove that exception to the penalty.
no_penalty_exception_for_agri_fresh_water_city_tiles = false

; Adds an option to the stealth attack target selection popup that allows the player to opt out of doing a stealth attack. If selected, the unit will
; attack normally, targeting the tile's top defender. Similarly, if stealth bombardment is canceled, the unit will bombard normally and may target
; buildings or population if attacking a city.
include_stealth_attack_cancel_option = false

; Aircraft flying a recon mission can be intercepted by enemy fighters or ground AA as if they were flying a bombing mission
intercept_recon_missions = false

; Under the standard rules, performing a recon mission or intercepting an attacker causes a unit to lose all of its remaining moves. Setting this
; option to true causes those actions to only consume one move. This makes them consistent with other air missions like bombing. Note: fighters will
; only be able to intercept multiple times in one turn if they have the blitz ability.
charge_one_move_for_recon_and_interception = false

; In the base game, precision striking was only intended to be used by bombers. This option extends the precision strike logic to cover land & sea
; artillery and cruise missiles. Specifically what it does is:
;   1. Fixes the animations, so land & sea artillery will play their bombard animations and cruise missiles will play their strike animation
;   2. Makes it so that the strikable range depends on the bombard range for land & sea units instead of operational range
;   3. Despawns cruise missiles after they've performed a precision strike
polish_precision_striking = true

; Enables units to perform stealth attacks when they bombard or bomb a target. Like regular stealth attacks this opens a popup allowing the player to
; choose a specific unit to target. The attacking unit must have the stealth attack special action checked, must have a list of stealth attack targets
; set, and the target tile must be visible.
enable_stealth_attack_via_bombardment = false

; Prevents aircraft from being damaged by bombardment or bombing
immunize_aircraft_against_bombardment = false

; Unit type names listed here will use PTW-like targeting when bombarding cities. PTW-like means there is a 1-in-3 chance they will target each of
; population, buildings, and units. This is unlike Conquests artillery targeting, which always goes after units first. Items in the list are separated
; by spaces and multi-word items must be wrapped in quotation marks like for perfume specs. Example: [Catapult Cannon Artillery "Radar Artillery"]
ptw_like_artillery_targeting = []

; Changes the meaning of the charm attack flag to indicate PTW-like targeting. This is a matter of convenience. It allows modders to specify PTW
; targeting using an editor, instead of the list above, at the cost of losing the charm attack function.
charm_flag_triggers_ptw_like_targeting = false

; Units with the king ability will defend like normal, instead of always being the last to defend in a stack. Useful for mods that use the king flag
; for special purposes. Does not apply in regicide games.
ignore_king_ability_for_defense_priority = false

; Untradable techs will appear grayed out on the trade screen. This lets you see which untradable techs the AI has just like for tradable
; ones. "Untradable" means techs that have been flagged as "cannot be traded" in the editor. This option only matters for modded games as there are no
; untradable techs in the standard game.
show_untradable_techs_on_trade_screen = false

; Barbarians will capture cities instead of ransacking them. This option also modifies the game's production logic so barbarian cities can build
; things, grow, and even do research.
; This feature is EXPERIMENTAL at the moment. It basically works but hasn't been extensively tested. For example, I don't know what would happen if
; the barb player were to win the game.
; Because of how barb city production works under the hood, it requires barb activity to be turned on in order to work. The mod will handle this
; automatically. If this option is enabled, there is at least one barb city on the map, and the barb activity level is set to 0 (no barbarians), the
; level will be increased to 1 (sedentary) in order not to block barb city production.
enable_city_capture_by_barbarians = false

; A list of modifications to the rules for defensive bombard. "Defensive bombard" is the free shot a bombard unit gets when the stack it's in is
; attacked. The possible options are:
;   lethal: Attackers may be destroyed by defensive bombard if the bombarding unit has the appropriate lethal land/sea bombard ability.
;   aerial: Air units may perform defensive bombard if they can perform bombing missions.
;   not-invisible: Attacking units are immune to defensive bombard if they are invisible and not detected.
;   blitz: Units with blitz may perform defensive bombard multiple times per turn, once for each move they have.
;   docked-vs-land: Docked ships (i.e. in a city) can perform defensive bombard against land units attacking their city.
; For example, to activate all options, set to [lethal aerial not-invisible blitz docked-vs-land]. The order of items in the list does not matter. You
; can also activate all options by setting to [all] (with or without the brackets).
special_defensive_bombard_rules = []

; A list of modifications to the rules for zone of control, like above for defensive bombard. The possibilities are:
;   amphibious: Land units may exert zone of control over sea units and vice-versa. This can only be done using bombard strength, not attack
;     strength. It also requires non-zero bombard range.
;   lethal: Units may be destroyed by zone of control. The intercepting unit must have the lethal bombard ability in order to do this, even if it's
;     using its attack strength to exert ZoC.
;   aerial: Air units can exert zone of control if their type has the "Zone of Control" option checked. Additionally, they must be able to perform the
;     bombing mission, have non-zero bombard strength, and non-zero operational range.
; Like for defensive bombard, all options can be activated by setting to [all] (with or without the brackets), and order does not matter.
special_zone_of_control_rules = []

; All human players in a hotseat game will share visibility
share_visibility_in_hotseat = false

; All human players in a hotseat game will share the effects of the wonders they've built, great or small. This applies to all civ-wide effects, for
; example if any human player builds Leonardo's Workshop, all human players get half price upgrades. Notes:
; 1. If a human player receiving the shared effect of a small wonder and that SW has no non-shared effects, it becomes unbuildable for that player.
; 2. Building and army requirements for wonders are shared as well. For example, all human players are allowed to build Battlefield Medicine once all
;    of them combined have five hospitals.
; 3. For the Great Library effect, known AI civs are shared as well. If an AI has contact with any human player, it is considered to be in contact
;    with all of them for the purpose of granting techs to human players.
share_wonders_in_hotseat = false

allow_precision_strikes_against_tile_improvements = false
dont_end_units_turn_after_bombarding_barricade = false

; Allows land units to bombard aircraft and naval units in cities
; This does not override the immunity of aircraft vs bombardment, if that option is also activated.
remove_land_artillery_target_restrictions = false

; Allows tile improvements on a tile with an occupied airfield to be destroyed by bombardment, not including the airfield itself. For example, under
; the standard game rules, if you bombard a tile with a road, airfield, and fighter on it, you will do no damage because the attack will target the
; fighter which is invulnerable (aircraft in an airfield cannot be damaged by bombardment). This option allows such an attack to bypass the fighter
; and hit the tile instead, as long as that tile has an improvement other than the airfield.
allow_bombard_of_other_improvs_on_occupied_airfield = false

; Displays the total number of cities in the game on the demographics screen (press F11).
show_total_city_count = false

; Under the standard game rules, each forbidden-palace-like building in an empire increases its optimal city number (OCN) by 37.5% of the base number,
; except if the empire is running a government with communal corruption, in which case the increase is 100% of the base. With this option enabled, the
; communal corruption rule is always in force, so each forbidden palace always increases the OCN by an amount equal to the base number.
; NOTE: The "base" optimal city number comes from the map size. It's the number set on the "World Sizes" tab in the editor.
strengthen_forbidden_palace_ocn_effect = false

; This option allows you to increase the maintenance cost of units depending on their shield cost. For every X shields that the unit costs to build
; (where X is the setting below), the unit's maintenance increases by one unit's worth. For example, if set to 100, units that cost 0-99 shields will
; have normal maintenace, units costing 100-199 shields will cost double, those costing 200-299 will cost triple, etc. (Note the final cost in GPT
; depends on gov't type). Set <= 0 to disable.
extra_unit_maintenance_per_shields = 0

; This option renames players' civs depending on their eras. The format is a list of names each associated with a list of replacements. There is one
; replacement for each era or, if the list is shorter than the number of eras, no replacement will be done in the later eras. Example:
;   [Rome: Rome "Byzantine Empire" Italy Italy,
;    Roman: Roman Byzantine Italian Italian,
;    France: Gaul, French: Gaulic]
; In this example, Rome will be renamed to "Rome" in the first era, "Byzantine Empire" in the second, and "Italy" in the third and fourth. The
; adjectives will be replaced to match. France/French will be renamed to Gaul/Gaulic only in the first era.
; Spaces are used to separate words so if a name or replacement has multiple words it's necessary to use quotation marks to group them together like
; for "Byzantine Empire" in the example.
; The replacements apply to civ nouns, adjectives, and formal names. If a player has put in a custom name, that will not be replaced.
civ_aliases_by_era = []

; This option works like the one above except it replaces leader names instead of civ names. Each replacement name may be followed by (M) or (F) to
; specify gender. Example:
;   ["Joan d'Arc": Vercingetorix (M) "Joan d'Arc" (F) Napoleon (M) "De Gaulle" (M)]
; If no gender is specified then the game will use whatever gender was set in the scenario data for that civ's leader. That means (F) could be omitted
; in the above example since the leader of France is already female.
; Additionally you can include a replacement title after the gender separated by a comma. Here's the example with titles added:
;   ["Joan d'Arc": Vercingetorix (M, King) "Joan d'Arc" (F) Napoleon (M, Emperor) "De Gaulle" (M, President)]
leader_aliases_by_era = []

; Here it's possible to limit how many units of each type players may build. Example:
;   ["Royal Guard": 3, Champion: 1 per-city, "Heavy Tank": 3 cities-per, "Heavy Infantry": 5 + 2 per-city]
; The limits may be constant values or vary depending on city counts. In the example above, players will each be limited to 3 Royal Guards. They may
; build one Champion for each city they own. They may build one Heavy Tank for every 3 cities they own. It is also possible to combine terms with plus
; signs, as for Heavy Infantry.
; The unit limits apply to unit production by players, not all forms of unit creation. Specifically, they apply to city production, upgrading, and
; auto-production from wonders. They do not apply to all other ways units may be created including by being captured, enslaved, spawned from a razed
; city, spawned for barbarians, pre-placed in a scenario, spawned for the AI based on difficulty level, etc.
unit_limits = []

; Removes barracks/harbor/airport requirement from upgrades
allow_upgrades_in_any_city = false

; Stops the game from placing volcanos during map generation. Any tiles that would have been volcanos will be mountains instead.
do_not_generate_volcanos = false

; Stops the game from placing pollution on impassable tiles
do_not_pollute_impassable_tiles = false

; Includes the hitpoints of each possible target on the stealth attack selection popup. This makes it easier to pick out weakened units.
show_hp_of_stealth_attack_options = false

; Stops invisible units from being targeted by stealth attacks. They can still be targeted if they've been revealed by the attacking civ.
exclude_invisible_units_from_stealth_attack = false

; Normally planting a forest always produces the regular non-LM forest terrain. This option changes that so it instead produces LM forest.
convert_to_landmark_after_planting_forest = false

; This option specifies how likely it is (in percent) for a combat land or sea unit with a maximum of one HP to be destroyed when struck by a
; nuke. Set to 100 for base game behavior.
chance_for_nukes_to_destroy_max_one_hp_units = 100

; Allows you to sell aqueducts and hospitals as well as any modded buildings that uncap population growth. A city must be below the pop cap for a sale
; to be allowed, i.e., under the standard rules, aqueducts may only be sold in cities of pop <= 6 and for hospitals pop <= 12.
allow_sale_of_aqueducts_and_hospitals = false

; This option makes it so that only sea units with the "detect invisible" ability can reveal invisible sea units, and likewise for non-sea units.
no_cross_shore_detection = false

; Controls the size of the area in which cities can work tiles. The value corresponds to cultural border expansions. For example, setting this to 1
; means cities would only be able to work tiles within their level 1 cultural borders, meaning the eight tiles neighboring the city's own
; tile. Setting to 2 gives you the game's standard rule that cities may work tiles within their level 2 cultural borders, which they attain after one
; expansion. Setting to 3 allows them to work within level 3 borders and so forth.
; Notes: (1) If the city can work tiles in the fourth ring or farther, the map view on the city screen will be zoomed out when you enter it. Otherwise
; it's not possible to show the entire work area. You can zoom back in by pressing Z. (2) The next option below can limit cities' workable areas to be
; smaller than the radius set here, based on their culture. (3) This option has a minimum value of 1 and a maximum of 7.
city_work_radius = 2

; This option can reduce the size of the area cities can work based on their cultural level.
; Possible values are:
;   none: Standard game rules apply; cities can work any tile that's within the work radius and within their owner's borders.
;   cultural: Cities may only work tiles that are within their direct cultural borders, e.g. a city with zero culture may only work the 8 surrounding
;     tiles. After one expansion, it may work the standard 20, after a second expansion it may work the third ring, and so on.
;   cultural-min-2: Like "cultural" except cities can always work their standard 20 tiles.
;   cultural-or-adjacent: Cities can work tiles in their direct cultural borders plus any tiles adjacent to those.
work_area_limit = none

; The maximum distance it's possible to rebase an aircraft equals its operational range times this value. For standard game rules, set to 6.
rebase_range_multiplier = 6

; This option prevents units from loading into two different transports on the same turn. Once a unit has been loaded into a transport, it becomes
; tied to that transport for the remainder of the turn and cannot be loaded into any other. Loading into armies is not affected. The purpose of this
; option is to make the galley chaining exploit impossible.
limit_unit_loading_to_one_transport_per_turn = false

; In the base game, if you set Cavalry to upgrade to Tank but don't give it the upgrade ability, intending to make Cavalry obsolete when Tanks become
; available but not upgradable to them, you'll be left with the strange situation that older units such as Knights are allowed to upgrade to Tanks
; even though Cavalry are not. This option makes it so that Knights upgrade to Cavalry in that case. In general, it makes it so that upgrade chains
; stop at the type along the chain that does not have the upgrade ability.
; NOTE: The chain is only stopped if the civ in question can build the unit type. The example above is simplified. In the actual rules, Cavalry
; upgrades to Sipahi, which upgrades to Cossack. Blocking the upgrade chain at Cavalry would prevent Ottomans and Russia from upgrading to their
; unique units, so the mod won't do that. You must clear the upgrade ability from Sipahi and Cossack as well to block those civs there instead.
prevent_old_units_from_upgrading_past_ability_block = false

; Buildings double their culture production this many years after they were built. For standard game rules, set to 1000.
years_to_double_building_culture = 1000

; Controls how long it takes for wonders to produce tourism gold as a percent of the standard rate. For example, if set to 200, it would take 2000
; years to begin generating 2 GPT tourism, instead of the standard 1000 years, and 3000 years for 4 GPT, instead of the standard 1500. This setting is
; effectively a scaling factor on the tourism time thresholds. For standard rules, set to 100.
tourism_time_scale_percent = 100

; One the first turn of a hotseat game, all human players will be given diplomatic contact with each other.
introduce_all_human_players_at_start_of_hotseat_game = false

[=======================]
[=== DAY/NIGHT CYCLE ===]
[=======================]

; How the day/night cycle operates in the game. If enabled, terrain, cities, resources, landmarks and terrain buildings will change appearance based on 
; the time of day, with 24 possible stages (one for each hour). The base game art is used for 12pm. If set to 'off', only base game art will be used. 
; Day/night cycle should not be used if you are using non-standard terrain art or resources. Doing so may result in visual glitches or missing art.
; The possible values are:
;   off:        Only base game art used
;   timer:      Increment based on time elapsed since last hour transition (e.g., transition to next hour every 3 minutes)
;   user-time:  Match the user's system clock to determine hour of the day
;   every-turn: Increment every turn by a fixed amount of hours
;   specified:  Pin the hour to a specific value (so hour of day is always the same)
day_night_cycle_mode = off

; If day_night_cycle_mode is set to 'timer', minimum minutes of real time to elapse before transitioning to the next hour in the cycle.
; This is checked only at the end of the turn, so actual minutes may exceed this number.
elapsed_minutes_per_day_night_hour_transition = 3

; If day_night_cycle_mode is set to 'timer' or 'every-turn', the number of hours to transition. This should be a value between 1 and 12 inclusive.
fixed_hours_per_turn_for_day_night_cycle = 1

; If day_night_cycle_mode is set to 'specified', the hour of the day to pin the cycle to. This should be a value between 0 (midnight) and 23 (11pm) inclusive.
pinned_hour_for_day_night_cycle = 0
